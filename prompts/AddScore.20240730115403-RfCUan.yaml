type: function
parameters:
  - id: gtXb6dAfxPOpPKf9ijWeO
    type: string
    key: question
  - id: v20TWM3UeRxpP8RtvrpFX
    key: search
    type: source
    source:
      variableFrom: tool
      agent:
        projectId: "468966286659944448"
        id: 20240730093037-FRWnyG
        from: assistant
        parameters:
          question: "{{ question }}"
prompts:
  flflpRQlaaO7t-rjM61Ls:
    index: 0
    data:
      type: message
      data:
        id: flflpRQlaaO7t-rjM61Ls
        role: user
        content: ""
outputVariables:
  - id: FXQdszuO8oIwo2cyUjIl3
    name: organic_results
    type: array
    element:
      id: NfWAFiSYdgbL9INqV9oGJ
      name: element
      type: object
      properties:
        - id: L1BKQUDM9KbeG3UQsUpd8
          type: string
          name: content
          required: true
        - id: AgaIdt2FEgtIf0w_giEHa
          type: number
          name: score
          required: true
id: 20240730115403-RfCUan
createdAt: 2024-07-30T03:54:03.035Z
updatedAt: 2024-07-30T03:54:03.035Z
createdBy: z2qaBKnrTUAobCcqGMbqAMFW5WHpYzL3Kub2D
updatedBy: z2qaBKnrTUAobCcqGMbqAMFW5WHpYzL3Kub2D
name: AddScore
model: gpt-4o-mini
prompt: "{{question}}"
code: |
  const getUserHeader = () => {
    const user = context.get('user');
    return {
      'x-user-did': user?.did,
      'x-user-role': user?.role,
      'x-user-provider': user?.provider,
      'x-user-fullname': user?.fullName && encodeURIComponent(user?.fullName),
      'x-user-wallet-os': user?.walletOS,
    };
  };


  const list = (question?.organic_results || []).map(i=>{
    return call({
      name: 'z2qaBP9SahqU2L2YA3ip7NecwKACMByTFuiJ2',
      method: 'POST',
      path: '/api/ai/call'
      data: {
        projectId: '468966286659944448',
        ref: 'main',
        assistantId: ''
      },
      headers: getUserHeader()
    })
  })


  return {
    text: 'hello, AIGNE!'
  }
